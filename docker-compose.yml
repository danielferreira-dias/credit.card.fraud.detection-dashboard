services:
  backend:
    build:
      context: ./backend
      dockerfile: dockerfile
    container_name: fraud-detection-backend
    ports:
      - "80:80"
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
    volumes:
      # - ./backend/models:/app/models
      - ./backend/app:/app/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - postgres

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: fraud-detection-frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/index.html:/app/index.html
      - ./frontend/vite.config.ts:/app/vite.config.ts
      - ./frontend/tailwind.config.js:/app/tailwind.config.js
      - ./frontend/tsconfig.json:/app/tsconfig.json
      - ./frontend/tsconfig.node.json:/app/tsconfig.node.json
      - ./frontend/eslint.config.js:/app/eslint.config.js
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    restart: unless-stopped
    depends_on:
      - backend

  # mcp:
  #   image: anthropic/mcp-server:latest
  #   container_name: fraud-detection-mcp
  #   ports:
  #     - "3001:3000"
  #   environment:
  #     - MCP_PORT=3000
  #     - BACKEND_URL=http://backend:80
  #   volumes:
  #     - ./mcp-config:/app/config
  #   restart: unless-stopped
  #   depends_on:
  #     - backend

  postgres:
    image: postgres:latest
    container_name: fraud-detection-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_URL: ${DATABASE_URL}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: fraud-detection-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres_data:
  pgadmin_data:

networks:
  default:
    name: fraud-detection-network
